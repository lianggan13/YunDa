<UserControl
    x:Class="Y.ASIS.App.UserControls.PositionDetailsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:appcvt="clr-namespace:Y.ASIS.App.Converters"
    xmlns:common="clr-namespace:Y.ASIS.App.Common"
    xmlns:ctls="http://www.yd-tec.com/winfx/xaml/shared"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="http://www.yd-tec.com/winfx/xaml/helper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Y.ASIS.App.Models"
    xmlns:selector="clr-namespace:Y.ASIS.App.Selector"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Name="this"
    d:DataContext="{d:DesignInstance Type=model:Track}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <sys:String x:Key="ToolNormalValue">1|2|3|4|5|6|7|8</sys:String>
        <sys:String x:Key="ToolErrorValue">-3|-2|-1|0</sys:String>
        <!--#region converter-->
        <ctls:BoolToVisibilityConverter x:Key="BoolToVisible" />
        <ctls:BoolToVisibilityConverter x:Key="BoolToVisibilityIsTrueToCollapsed" IsTrueToVisible="False" />
        <ctls:ReverseVisibilityConverter x:Key="ReverseVisibility" />

        <appcvt:IntValueToWarningStateConverter x:Key="IntValueToWarningState" />
        <appcvt:ContainsIntValueToVisibilityConverter x:Key="ContainsIntValueToVisibility" />
        <appcvt:ContainsIntValueToVisibilityConverter x:Key="ContainsIntValueToVisibilityHide" IsHide="True" />
        <appcvt:ContainsIntValueToVisibilityConverter x:Key="ContainsIntValueToVisibilityReverse" Reverse="True" />
        <appcvt:ContainsIntValueToBoolConverter x:Key="ContainsIntValueToBool" />
        <appcvt:IntValueToSignalLightStateConverter x:Key="IntValueToSignalLightState" />
        <appcvt:IntValueToDepotDoorStateConverter x:Key="IntValueToDepotDoorState" />
        <appcvt:IntValueToGateStateConverter x:Key="InValueToGateState" />
        <appcvt:DoubleValueToElecTextConverter x:Key="DoubleValueToElecText" />

        <appcvt:DoubleValueToBrushConverter
            x:Key="ElecValueToBrush"
            GreaterThanBrush="{StaticResource HasEleclBrush}"
            LessThanBrush="#22AC38"
            Threshold="20" />

        <!--  GreaterThanBrush="{StaticResource WarningBrush}"  -->
        <appcvt:DoubleValueToBrushConverter
            x:Key="LoopRValueToBrush"
            GreaterThanBrush="{StaticResource WarningBrush}"
            LessThanBrush="#22AC38"
            Threshold="5" />

        <appcvt:DoubleValueToTextConverter x:Key="LoopRValueToText" Threshold="500.0" />
        <appcvt:BrushToCollapsedConverter x:Key="BrushToCollapsed" TragetBrush="{StaticResource WarningBrush}" />


        <appcvt:IntValueToDoorStateConverter x:Key="IntValueToDoorState" />
        <appcvt:ObjectIsNullToVisibilityConverter x:Key="ObjectIsNullToVisibility" />

        <appcvt:GroundingToVisibilityConverter x:Key="GroundingToVisibility" />
        <appcvt:LoopRToVisibilityConverter x:Key="LoopRToVisibility" />

        <appcvt:PositionIdToSignalLightCommandParameterConverter x:Key="PositionIdToSignalLightCommandParameter" />
        <appcvt:ICollectionToCountConverter x:Key="ICollectionToCount" />

        <appcvt:IsolationAndElecResultToOcsVisibilityConverter x:Key="IsolationAndElecResultToOcsVisibility" />
        <appcvt:MutiSignalLightAndGateVisiblityConverter x:Key="MutiSignalLightAndGateVisiblity" Reverse="True" />
        <!--#endregion-->

        <!--#region data template-->
        <DataTemplate x:Key="TPTTrainDetailsDataTemplate">
            <Grid
                x:Name="PART_Grid"
                Width="651"
                Height="110"
                PreviewKeyDown="TrainNoPreviewKeyDown">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="80" />
                </Grid.RowDefinitions>
                <StackPanel
                    x:Name="PART_Pal"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Viewbox
                        x:Name="LeftPantographBox"
                        Width="46"
                        Height="16"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="LeftPantographIcon"
                            Data="{StaticResource LeftPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                    <Viewbox
                        x:Name="RightPantographBox"
                        Grid.Column="2"
                        Width="46"
                        Height="16"
                        Margin="300,0,0,0"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="RightPantographIcon"
                            Data="{StaticResource RightPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                </StackPanel>
                <Image
                    x:Name="imgTrain"
                    Grid.Row="1"
                    Source="{StaticResource Train651x80Image}" />
                <Button Width="0" Height="0" />
                <TextBox
                    Grid.Row="1"
                    Width="120"
                    Height="24"
                    Margin="0,0,0,12"
                    Background="Transparent"
                    BorderThickness="0"
                    CaretBrush="White"
                    FontSize="18"
                    Foreground="White"
                    Text="{Binding No}"
                    TextAlignment="Center" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="3">
                    <!--  03 = 异常（单个检测到超时）  -->
                    <Setter TargetName="PART_Grid" Property="IsEnabled" Value="False" />
                    <Setter TargetName="PART_Pal" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="imgTrain" Property="Source" Value="{DynamicResource Train651x80Image_Gray}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding LeftPantograph}" Value="Up">
                    <Setter TargetName="LeftPantographBox" Property="Height" Value="47" />
                    <Setter TargetName="LeftPantographIcon" Property="Data" Value="{StaticResource LeftPantographUpDetailsIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RightPantograph}" Value="Up">
                    <Setter TargetName="RightPantographBox" Property="Height" Value="47" />
                    <Setter TargetName="RightPantographIcon" Property="Data" Value="{StaticResource RightPantographUpDetailsIcon}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TPTTTrainDetailsDataTemplate">
            <Grid
                x:Name="PART_Grid"
                Width="348"
                Height="70"
                PreviewKeyDown="TrainNoPreviewKeyDown">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="43" />
                </Grid.RowDefinitions>
                <StackPanel
                    x:Name="PART_Pal"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Viewbox
                        x:Name="LeftPantographBox"
                        Width="40"
                        Height="14"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="LeftPantographIcon"
                            Data="{StaticResource LeftPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                    <Viewbox
                        x:Name="RightPantographBox"
                        Grid.Column="2"
                        Width="40"
                        Height="14"
                        Margin="160,0,0,0"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="RightPantographIcon"
                            Data="{StaticResource RightPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                </StackPanel>
                <Image
                    x:Name="imgTrain"
                    Grid.Row="1"
                    Source="{DynamicResource Train348x43Image}" />
                <Button Width="0" Height="0" />
                <TextBox
                    Grid.Row="1"
                    Width="120"
                    Height="16"
                    Margin="0,0,0,8"
                    Background="Transparent"
                    BorderThickness="0"
                    CaretBrush="White"
                    FontSize="12"
                    Foreground="White"
                    Text="{Binding No}"
                    TextAlignment="Center" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="3">
                    <!--  03 = 异常（单个检测到超时）  -->
                    <Setter TargetName="PART_Grid" Property="IsEnabled" Value="False" />
                    <Setter TargetName="PART_Pal" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="imgTrain" Property="Source" Value="{DynamicResource Train348x43Image_Gray}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding LeftPantograph}" Value="Up">
                    <Setter TargetName="LeftPantographBox" Property="Height" Value="27" />
                    <Setter TargetName="LeftPantographIcon" Property="Data" Value="{StaticResource LeftPantographUpDetailsIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RightPantograph}" Value="Up">
                    <Setter TargetName="RightPantographBox" Property="Height" Value="27" />
                    <Setter TargetName="RightPantographIcon" Property="Data" Value="{StaticResource RightPantographUpDetailsIcon}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TPPTTTrainDetailsTemplate">
            <Grid
                x:Name="PART_Grid"
                Width="348"
                Height="70"
                PreviewKeyDown="TrainNoPreviewKeyDown">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="43" />
                </Grid.RowDefinitions>
                <StackPanel
                    x:Name="PART_Pal"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Viewbox
                        x:Name="LeftPantographBox"
                        Width="40"
                        Height="14"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="LeftPantographIcon"
                            Data="{StaticResource LeftPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                    <Viewbox
                        x:Name="RightPantographBox"
                        Grid.Column="2"
                        Width="40"
                        Height="14"
                        Margin="160,0,0,0"
                        VerticalAlignment="Bottom">
                        <Path
                            x:Name="RightPantographIcon"
                            Data="{StaticResource RightPantographDownDetailsIcon}"
                            Fill="#2BC1FF" />
                    </Viewbox>
                </StackPanel>
                <Image
                    x:Name="imgTrain"
                    Grid.Row="1"
                    Source="{StaticResource Train348x43Image}" />
                <Button Width="0" Height="0" />
                <TextBox
                    Grid.Row="1"
                    Width="120"
                    Height="16"
                    Margin="0,0,0,8"
                    Background="Transparent"
                    BorderThickness="0"
                    CaretBrush="White"
                    FontSize="12"
                    Foreground="White"
                    TextAlignment="Center" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="3">
                    <!--  03 = 异常（单个检测到超时）  -->
                    <Setter TargetName="PART_Grid" Property="IsEnabled" Value="False" />
                    <Setter TargetName="PART_Pal" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="imgTrain" Property="Source" Value="{DynamicResource Train348x43Image_Gray}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=LeftPantograph}" Value="Up">
                    <Setter TargetName="LeftPantographBox" Property="Height" Value="27" />
                    <Setter TargetName="LeftPantographIcon" Property="Data" Value="{StaticResource LeftPantographUpDetailsIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=RightPantograph}" Value="Up">
                    <Setter TargetName="RightPantographBox" Property="Height" Value="27" />
                    <Setter TargetName="RightPantographIcon" Property="Data" Value="{StaticResource RightPantographUpDetailsIcon}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TPTPlatformDataTemplate">
            <Grid
                Width="180"
                Height="80"
                Margin="90,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="4" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Margin="0,0,0,5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <Viewbox Width="32">
                        <Path Data="{StaticResource WorkerIcon}" Fill="#C2C8F2" />
                    </Viewbox>
                    <TextBlock
                        Margin="3,0"
                        VerticalAlignment="Center"
                        FontSize="28"
                        Foreground="#C2C8F2"
                        Text="×" />
                    <TextBlock
                        Margin="0,4,20,0"
                        VerticalAlignment="Center"
                        FontSize="24"
                        Foreground="#C2C8F2"
                        Text="{Binding PassCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <WrapPanel>
                        <ItemsControl ItemsSource="{Binding Doors}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ctls:Door
                                        Width="32"
                                        Height="32"
                                        VerticalAlignment="Bottom"
                                        State="{Binding ., Converter={StaticResource IntValueToDoorState}}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <TextBlock
                            FontSize="13"
                            Foreground="#C2C8F2"
                            Text="{Binding Index, StringFormat='{}#{0}'}" />
                    </WrapPanel>

                </StackPanel>
                <Border Grid.Row="1" Background="#A0A0A0" />
                <Image
                    Grid.Row="2"
                    Margin="0,6,0,0"
                    VerticalAlignment="Top"
                    Source="{StaticResource Ganyway160x26Image}"
                    Stretch="None"
                    Visibility="{Binding Gangway, Converter={StaticResource ContainsIntValueToVisibilityHide}, ConverterParameter='1'}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TPPTTPlatformDataTemplate">
            <Grid
                Width="auto"
                Height="60"
                Margin="5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Margin="0,0,0,2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <Viewbox Width="26">
                        <Path Data="{StaticResource WorkerIcon}" Fill="#C2C8F2" />
                    </Viewbox>
                    <TextBlock
                        Margin="3,0"
                        VerticalAlignment="Center"
                        FontSize="20"
                        Foreground="#C2C8F2"
                        Text="×" />
                    <TextBlock
                        Margin="0,4,10,0"
                        VerticalAlignment="Center"
                        FontSize="20"
                        Foreground="#C2C8F2"
                        Text="{Binding PassCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ItemsControl ItemsSource="{Binding Doors}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ctls:Door
                                    Width="32"
                                    Height="32"
                                    VerticalAlignment="Bottom"
                                    State="{Binding ., Converter={StaticResource IntValueToDoorState}}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
                <Border Grid.Row="1" Background="#A0A0A0" />
                <Image
                    Grid.Row="2"
                    VerticalAlignment="Top"
                    Source="{StaticResource Ganyway116x18Image}"
                    Stretch="None"
                    Visibility="{Binding Gangway, Converter={StaticResource ContainsIntValueToVisibilityHide}, ConverterParameter='1'}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TPTPositionDetailsDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="125" />
                    <RowDefinition Height="14" />
                    <RowDefinition Height="56" />
                </Grid.RowDefinitions>
                <ItemsControl
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource TPTPlatformDataTemplate}"
                    ItemsSource="{Binding Positions[0].State.Platforms}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition Height="45" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[0], Converter={StaticResource IntValueToSignalLightState}}"
                        Visibility="Visible">
                        <!--<ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>-->
                    </ctls:SignalLight>

                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[1], Converter={StaticResource IntValueToSignalLightState}}"
                        Visibility="Visible">
                        <!--<ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>-->
                    </ctls:SignalLight>

                    <ctls:Gate
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="2"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        DownCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        EnableDown="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[0].State.Gate[0], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}"
                        Visibility="Visible">
                        <!--<ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>-->
                    </ctls:Gate>
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="4"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='0|11'}" />
                    <ContentControl
                        Grid.RowSpan="2"
                        Grid.Column="5"
                        VerticalAlignment="Bottom"
                        Content="{Binding Positions[0].State.Trains[0]}"
                        ContentTemplate="{StaticResource TPTTrainDetailsDataTemplate}"
                        Visibility="{Binding Positions[0].State.Trains[0], Converter={StaticResource ObjectIsNullToVisibility}}" />
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="6"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[0].State.DepotGate[1], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[0].State.DepotGate[1], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='0|11'}" />
                    <ctls:Gate
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="8"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        Direction="Right"
                        DownCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        EnableDown="{Binding Positions[0].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[0].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[0].State.Gate[1], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}"
                        Visibility="Visible">
                        <!--<ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>-->
                    </ctls:Gate>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="9"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[4], Converter={StaticResource IntValueToSignalLightState}}"
                        Visibility="Visible">
                        <!--<ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[4]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>-->
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="10"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[5], Converter={StaticResource IntValueToSignalLightState}}"
                        Visibility="Visible">
                        <!--<ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[5]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>-->
                    </ctls:SignalLight>

                    <ctls:WarningLight
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[0].State.Warning, Converter={StaticResource IntValueToWarningState}}" />
                    <ctls:WarningLight
                        Grid.Column="9"
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[0].State.Warning, Converter={StaticResource IntValueToWarningState}}" />

                    <!--  工具 已领用  -->
                    <Border
                        Grid.Column="5"
                        Width="40"
                        Height="40"
                        Margin="160,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="#0288D1"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolNormalValue}}">
                        <Grid>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToolIcon}"
                                Fill="White" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="13"
                                Foreground="White"
                                Text="{Binding Positions[0].State.Tool}" />
                        </Grid>
                    </Border>

                    <!--  工具 异常  -->
                    <Border
                        Grid.Column="5"
                        Width="40"
                        Height="40"
                        Margin="160,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="Gray"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolErrorValue}}">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ToolIcon}"
                            Fill="White" />
                    </Border>
                </Grid>
                <Image Grid.Row="3" Source="{StaticResource Track1238x14Image}" />
                <Canvas Grid.RowSpan="5">
                    <Canvas.Resources>
                        <DataTemplate x:Key="GroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 150 60 150 390"
                                    Stroke="{Binding}"
                                    StrokeThickness="4" />
                                <Path
                                    Data="M 130 390 170 390 M 135 394 165 394 M 140 398 160 398"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>
                    </Canvas.Resources>

                    <!--  来电端  -->
                    <Path
                        Data="M0 60 60 60 60 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4" />

                    <!--  隔离开关 合闸  -->
                    <Path
                        Data="M 58 40 112 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='1'}" />

                    <!--  隔离开关 分闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 58 40 112 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='4'}" />

                    <!--  隔离开关 分闸  -->
                    <Path
                        Data="M 58 40 110 20"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='2'}" />

                    <!--  隔离开关 合闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 58 40 110 20"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3'}" />

                    <!--  隔离开关 异常  -->
                    <Path
                        Data="M 58 40 110 20"
                        Stroke="Gray"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}" />

                    <!--  接触网 有电  -->
                    <Path
                        Data="M 110 40 110 60 1245 60"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding ElementName=OcsNoElec, Path=Visibility, Converter={StaticResource ReverseVisibility}}" />

                    <!--  接触网 无电  -->
                    <Path
                        x:Name="OcsNoElec"
                        Data="M 110 40 110 60 1245 60"
                        Stroke="{StaticResource NoEleclBrush}"
                        StrokeThickness="4">
                        <Path.Visibility>
                            <MultiBinding Converter="{StaticResource IsolationAndElecResultToOcsVisibility}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Isolation" />
                                    <Binding Path="Positions[0].State.ElecResult" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Path.Visibility>
                    </Path>

                    <!--  接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource GroundingDataTemplate}"
                        Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource GroundingDataTemplate}" Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[0].State.Grounding, Converter={StaticResource GroundingToVisibility}}">
                        <!--  接地装置 正常  -->
                        <ContentControl
                            x:Name="GroundingNoElec"
                            ContentTemplate="{StaticResource GroundingDataTemplate}"
                            Visibility="{Binding Positions[0].State.LoopR, Converter={StaticResource LoopRToVisibility}}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource GroundingDataTemplate}" Visibility="{Binding ElementName=GroundingNoElec, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>
                    <Border
                        Canvas.Left="240"
                        Canvas.Top="10"
                        Height="40"
                        Padding="10,0"
                        Background="{Binding Positions[0].State.ElecValue, Converter={StaticResource ElecValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel Orientation="Horizontal">
                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ElecIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding Positions[0].State.ElecValue, Converter={StaticResource DoubleValueToElecText}}" />
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Top="350"
                        Canvas.Right="1120"
                        Height="40"
                        Padding="10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ResistanceIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="18"
                                Foreground="White">
                                <Run Text="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </Canvas>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TPTTPositionDetailsDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="125" />
                    <RowDefinition Height="14" />
                    <RowDefinition Height="56" />
                </Grid.RowDefinitions>
                <ItemsControl
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource TPTPlatformDataTemplate}"
                    ItemsSource="{Binding Positions[0].State.Platforms}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition Height="45" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[0], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>

                    </ctls:SignalLight>

                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[1], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:Gate
                        Grid.RowSpan="2"
                        Grid.Column="2"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        DownCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        EnableDown="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[0].State.Gate[0], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}"
                        Visibility="Visible">
                        <!--<ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>-->
                    </ctls:Gate>
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="4"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='11'}" />
                    <ContentControl
                        Grid.RowSpan="2"
                        Grid.Column="5"
                        VerticalAlignment="Bottom"
                        Content="{Binding Positions[0].State.Trains[0], UpdateSourceTrigger=PropertyChanged}"
                        ContentTemplate="{DynamicResource TPTTTrainDetailsDataTemplate}"
                        Visibility="{Binding Positions[0].State.Trains[0], Converter={StaticResource ObjectIsNullToVisibility}}" />
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="6"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|2|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[2], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[2], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|2|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[2], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[2]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="7"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|3|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[3], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[3], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|3|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[3], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[3]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ContentControl
                        Grid.RowSpan="2"
                        Grid.Column="8"
                        VerticalAlignment="Bottom"
                        Content="{Binding Positions[0].State.Trains[1]}"
                        ContentTemplate="{StaticResource TPTTTrainDetailsDataTemplate}"
                        Visibility="{Binding Positions[0].State.Trains[1], Converter={StaticResource ObjectIsNullToVisibility}}" />
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="9"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[0].State.DepotGate[1], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[0].State.DepotGate[1], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='11'}" />
                    <ctls:Gate
                        Grid.RowSpan="2"
                        Grid.Column="11"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        Direction="Right"
                        DownCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        EnableDown="{Binding Positions[0].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[0].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[0].State.Gate[1], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}">
                        <!--<ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>-->
                    </ctls:Gate>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="12"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[4], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[4]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="13"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[5], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[5]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:WarningLight
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[0].State.Warning, Converter={StaticResource IntValueToWarningState}}" />
                    <ctls:WarningLight
                        Grid.Column="12"
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[0].State.Warning, Converter={StaticResource IntValueToWarningState}}" />
                    <Border
                        Grid.Column="5"
                        Width="40"
                        Height="40"
                        Margin="40,30,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="#0288D1"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolNormalValue}}">
                        <Grid>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToolIcon}"
                                Fill="White" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="13"
                                Foreground="White"
                                Text="{Binding Positions[0].State.Tool}" />
                        </Grid>
                    </Border>

                    <Border
                        Grid.Column="6"
                        Width="40"
                        Height="40"
                        Margin="0,30,40,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="#0288D1"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='1'}">
                        <Grid>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToolIcon}"
                                Fill="White" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="13"
                                Foreground="White"
                                Text="{Binding Positions[0].State.Tool}" />
                        </Grid>
                    </Border>

                    <Border
                        Grid.Column="6"
                        Width="40"
                        Height="40"
                        Margin="0,30,40,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="Gray"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolErrorValue}}">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ToolIcon}"
                            Fill="White" />
                    </Border>
                </Grid>
                <Image Grid.Row="3" Source="{StaticResource Track1238x14Image}" />
                <Canvas Grid.RowSpan="5">
                    <Canvas.Resources>
                        <DataTemplate x:Key="GroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 150 60 150 390"
                                    Stroke="{Binding}"
                                    StrokeThickness="4" />
                                <Path
                                    Data="M 130 390 170 390 M 135 394 165 394 M 140 398 160 398"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>
                    </Canvas.Resources>

                    <!--  来电端  -->
                    <Path
                        Data="M0 60 60 60 60 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4" />

                    <!--  隔离开关 合闸  -->
                    <Path
                        Data="M 58 40 112 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='1'}" />

                    <!--  隔离开关 分闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 58 40 112 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='4'}" />

                    <!--  隔离开关 分闸  -->
                    <Path
                        Data="M 58 40 110 20"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='2'}" />

                    <!--  隔离开关 合闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 58 40 110 20"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3'}" />

                    <!--  隔离开关 异常  -->
                    <Path
                        Data="M 58 40 110 20"
                        Stroke="Gray"
                        StrokeThickness="4"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}" />

                    <!--  接触网 有电  -->
                    <Path
                        Data="M 110 40 110 60 1245 60"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="4"
                        Visibility="{Binding ElementName=OcsNoElec, Path=Visibility, Converter={StaticResource ReverseVisibility}}" />

                    <!--  接触网 无电  -->
                    <Path
                        x:Name="OcsNoElec"
                        Data="M 110 40 110 60 1245 60"
                        Stroke="{StaticResource NoEleclBrush}"
                        StrokeThickness="4">
                        <Path.Visibility>
                            <MultiBinding Converter="{StaticResource IsolationAndElecResultToOcsVisibility}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Isolation" />
                                    <Binding Path="Positions[0].State.ElecResult" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Path.Visibility>
                    </Path>

                    <!--  接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource GroundingDataTemplate}"
                        Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource GroundingDataTemplate}" Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[0].State.Grounding, Converter={StaticResource GroundingToVisibility}}">
                        <!--  接地装置 正常  -->
                        <ContentControl
                            x:Name="GroundingNoElec"
                            ContentTemplate="{StaticResource GroundingDataTemplate}"
                            Visibility="{Binding Positions[0].State.LoopR, Converter={StaticResource LoopRToVisibility}}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource GroundingDataTemplate}" Visibility="{Binding ElementName=GroundingNoElec, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>
                    <Border
                        Canvas.Left="240"
                        Canvas.Top="10"
                        Height="40"
                        Padding="10,0"
                        Background="{Binding Positions[0].State.ElecValue, Converter={StaticResource ElecValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel Orientation="Horizontal">
                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ElecIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding Positions[0].State.ElecValue, Converter={StaticResource DoubleValueToElecText}}" />
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Top="350"
                        Canvas.Right="1120"
                        Height="40"
                        Padding="10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3"
                        Visibility="{Binding Path=Background, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BrushToCollapsed}}">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">

                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ResistanceIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="18"
                                Foreground="White"
                                Visibility="Hidden">
                                <Run Text="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </Canvas>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TPPTTPositionDetailsDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="60" />
                    <RowDefinition Height="100" />
                    <RowDefinition Height="14" />
                    <RowDefinition Height="56" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle
                    Grid.RowSpan="5"
                    Fill="#0B0D18"
                    Stroke="#CA79F2"
                    StrokeDashArray="4 3"
                    StrokeThickness="2"
                    Visibility="{Binding Positions[0].IsSelected, Converter={StaticResource BoolToVisible}}" />
                <Rectangle
                    Grid.RowSpan="5"
                    Grid.Column="2"
                    Fill="#0B0D18"
                    Stroke="#CA79F2"
                    StrokeDashArray="4 3"
                    StrokeThickness="2"
                    Visibility="{Binding Positions[1].IsSelected, Converter={StaticResource BoolToVisible}}" />
                <Image Grid.Row="3" Source="{StaticResource Track574x14Image}" />
                <Image
                    Grid.Row="3"
                    Grid.Column="2"
                    Source="{StaticResource Track574x14Image}" />
                <Border
                    Grid.RowSpan="5"
                    Background="Transparent"
                    Cursor="Hand"
                    DataContext="{Binding Positions[0]}"
                    MouseDown="PositionMouseDown" />
                <Border
                    Grid.RowSpan="5"
                    Grid.Column="2"
                    Background="Transparent"
                    Cursor="Hand"
                    DataContext="{Binding Positions[1]}"
                    MouseDown="PositionMouseDown" />
                <ItemsControl
                    Grid.Row="1"
                    Margin="170,0,0,0"
                    HorizontalAlignment="Center"
                    ItemTemplate="{StaticResource TPPTTPlatformDataTemplate}"
                    ItemsSource="{Binding Positions[0].State.Platforms}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ItemsControl
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="0,0,170,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource TPPTTPlatformDataTemplate}"
                    ItemsSource="{Binding Positions[1].State.Platforms}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55" />
                        <RowDefinition Height="45" />
                    </Grid.RowDefinitions>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[0], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="1"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[1], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:Gate
                        Grid.RowSpan="2"
                        Grid.Column="2"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        DownCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|102'}"
                        EnableDown="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[0].State.GateCommand[0], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[0].State.Gate[0], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|0|101'}">
                        <ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[0]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>
                    </ctls:Gate>
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="4"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[0].State.DepotGate[0], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='11'}" />
                    <ContentControl
                        Grid.RowSpan="2"
                        Grid.Column="5"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Content="{Binding Positions[0].State.Trains[0]}"
                        ContentTemplate="{StaticResource TPTTTrainDetailsDataTemplate}"
                        Visibility="{Binding Positions[0].State.Trains[0], Converter={StaticResource ObjectIsNullToVisibility}}" />
                    <ctls:WarningLight
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[0].State.Warning, Converter={StaticResource IntValueToWarningState}}" />
                    <Border
                        Grid.Column="5"
                        Width="40"
                        Height="40"
                        Margin="10,10,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="#0288D1"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolNormalValue}}">
                        <Grid>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToolIcon}"
                                Fill="White" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="13"
                                Foreground="White"
                                Text="{Binding Positions[0].State.Tool}" />
                        </Grid>
                    </Border>

                    <Border
                        Grid.Column="5"
                        Width="40"
                        Height="40"
                        Margin="10,10,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="Gray"
                        CornerRadius="3"
                        Visibility="{Binding Positions[0].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolErrorValue}}">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ToolIcon}"
                            Fill="White" />
                    </Border>
                </Grid>
                <StackPanel
                    Grid.Row="2"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <ctls:SignalLight
                        Width="22"
                        Height="45"
                        Margin="0,0,5,0"
                        AllowCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|2|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[0].State.SignalLightCommand[2], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[0].State.SignalLightCommand[2], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[0].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|2|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[2], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[2]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|3|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[1].State.SignalLightCommand[3], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[1].State.SignalLightCommand[3], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|3|102'}"
                        LightSize="15"
                        State="{Binding Positions[0].State.SignalLight[3], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[3]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                </StackPanel>
                <Grid Grid.Row="2" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55" />
                        <RowDefinition Height="45" />
                    </Grid.RowDefinitions>
                    <Border
                        Width="40"
                        Height="40"
                        Margin="00,10,10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="#0288D1"
                        CornerRadius="3"
                        Visibility="{Binding Positions[1].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolNormalValue}}">
                        <Grid>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToolIcon}"
                                Fill="White" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="13"
                                Foreground="White"
                                Text="{Binding Positions[1].State.Tool}" />
                        </Grid>
                    </Border>

                    <Border
                        Width="40"
                        Height="40"
                        Margin="00,10,10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="Gray"
                        CornerRadius="3"
                        Visibility="{Binding Positions[1].State.Tool, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter={StaticResource ToolErrorValue}}">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource ToolIcon}"
                            Fill="White" />
                    </Border>
                    <ContentControl
                        Grid.RowSpan="2"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Content="{Binding Positions[1].State.Trains[0]}"
                        ContentTemplate="{StaticResource TPTTTrainDetailsDataTemplate}"
                        Visibility="{Binding Positions[1].State.Trains[0], Converter={StaticResource ObjectIsNullToVisibility}}" />
                    <ctls:DepotDoor
                        Grid.Row="1"
                        Grid.Column="1"
                        VerticalAlignment="Bottom"
                        State="{Binding Positions[1].State.DepotGate[1], Converter={StaticResource IntValueToDepotDoorState}}"
                        Visibility="{Binding Positions[1].State.DepotGate[1], Converter={StaticResource ContainsIntValueToVisibilityReverse}, ConverterParameter='11'}" />
                    <ctls:Gate
                        Grid.RowSpan="2"
                        Grid.Column="3"
                        VerticalAlignment="Bottom"
                        Command="{x:Static common:AppCommands.PositionGateSwitchCommand}"
                        Direction="Right"
                        DownCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|102'}"
                        EnableDown="{Binding Positions[1].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        EnableUp="{Binding Positions[1].State.GateCommand[1], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        State="{Binding Positions[1].State.Gate[1], Converter={StaticResource InValueToGateState}}"
                        UpCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|1|101'}">
                        <ctls:Gate.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-11">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Gate[1]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:Gate.Visibility>
                    </ctls:Gate>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="4"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[1].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[1].State.SignalLightCommand[4], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|4|102'}"
                        LightSize="15"
                        State="{Binding Positions[1].State.SignalLight[4], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[4]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:SignalLight
                        Grid.Row="1"
                        Grid.Column="5"
                        Width="22"
                        Height="45"
                        AllowCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|101'}"
                        Command="{x:Static common:AppCommands.PositionSignalLightSwitchCommand}"
                        CornerRadius="10"
                        EnableAllow="{Binding Positions[1].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='1'}"
                        EnableForbid="{Binding Positions[1].State.SignalLightCommand[5], Converter={StaticResource ContainsIntValueToBool}, ConverterParameter='2'}"
                        ForbidCommandParameter="{Binding Positions[1].State.PositionId, Converter={StaticResource PositionIdToSignalLightCommandParameter}, ConverterParameter='|5|102'}"
                        LightSize="15"
                        State="{Binding Positions[1].State.SignalLight[5], Converter={StaticResource IntValueToSignalLightState}}">
                        <ctls:SignalLight.Visibility>
                            <MultiBinding Converter="{StaticResource MutiSignalLightAndGateVisiblity}" ConverterParameter="11-10">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.SignalLight[5]" />
                                    <Binding ElementName="this" Path="CurrentRole" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </ctls:SignalLight.Visibility>
                    </ctls:SignalLight>
                    <ctls:WarningLight
                        Grid.Column="4"
                        Grid.ColumnSpan="2"
                        LightSize="40"
                        State="{Binding Positions[1].State.Warning, Converter={StaticResource IntValueToWarningState}}" />

                </Grid>
                <Canvas Grid.RowSpan="5" ClipToBounds="False">
                    <Canvas.Resources>
                        <DataTemplate x:Key="LeftGroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 143 60 143 380"
                                    Stroke="{Binding}"
                                    StrokeThickness="3" />
                                <Path
                                    Data="M 128 380 158 380 M 132 384 154 384 M 135 388 150 388"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate x:Key="RightGroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 560 60 560 380"
                                    Stroke="{Binding}"
                                    StrokeThickness="3" />
                                <Path
                                    Data="M 545 380 575 380 M 549 384 571 384 M 553 388 567 388"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>
                    </Canvas.Resources>

                    <!--  来电端  -->
                    <Path
                        Data="M 0 60 40 60 40 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3" />

                    <!--  隔离开关 合闸  -->
                    <Path
                        Data="M 38.5 50 81.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='1'}" />

                    <!--  隔离开关 分闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 38.5 50 81.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='4'}" />

                    <!--  隔离开关 分闸  -->
                    <Path
                        Data="M 38.5 50 80 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='2'}" />

                    <!--  隔离开关 合闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M 38.5 50 80 40"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3'}" />

                    <!--  隔离开关 异常  -->
                    <Path
                        Data="M 38.5 50 80 40"
                        Stroke="Gray"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[0].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}" />

                    <!--  隔离开关 有电  -->
                    <Path
                        Data="M80 50 80 60 613 60"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding ElementName=OcsNoElec1, Path=Visibility, Converter={StaticResource ReverseVisibility}}" />

                    <!--  隔离开关 无电  -->
                    <Path
                        x:Name="OcsNoElec1"
                        Data="M80 50 80 60 613 60"
                        Stroke="{StaticResource NoEleclBrush}"
                        StrokeThickness="3">
                        <Path.Visibility>
                            <MultiBinding Converter="{StaticResource IsolationAndElecResultToOcsVisibility}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[0].State.Isolation" />
                                    <Binding Path="Positions[0].State.ElecResult" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Path.Visibility>
                    </Path>

                    <!--  左接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource LeftGroundingDataTemplate}"
                        Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  左接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource LeftGroundingDataTemplate}" Visibility="{Binding Positions[0].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  右接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource RightGroundingDataTemplate}"
                        Visibility="{Binding Positions[0].State.Grounding[1], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  右接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource RightGroundingDataTemplate}" Visibility="{Binding Positions[0].State.Grounding[1], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  左接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[0].State.Grounding, Converter={StaticResource GroundingToVisibility}}">
                        <!--  左接地装置 正常  -->
                        <ContentControl
                            x:Name="LeftGroundingNoElec1"
                            ContentTemplate="{StaticResource LeftGroundingDataTemplate}"
                            Visibility="{Binding Positions[0].State.LoopR, Converter={StaticResource LoopRToVisibility}}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  左接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource LeftGroundingDataTemplate}" Visibility="{Binding ElementName=LeftGroundingNoElec1, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>

                    <!--  右接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[0].State.Grounding, Converter={StaticResource GroundingToVisibility}, ConverterParameter='1'}">
                        <!--  右接地装置 正常  -->
                        <ContentControl
                            x:Name="RightGroundingNoElec1"
                            ContentTemplate="{StaticResource RightGroundingDataTemplate}"
                            Visibility="{Binding Positions[0].State.LoopR, Converter={StaticResource LoopRToVisibility}, ConverterParameter='1'}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  右接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource RightGroundingDataTemplate}" Visibility="{Binding ElementName=RightGroundingNoElec1, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>

                    <Border
                        Canvas.Left="240"
                        Canvas.Top="10"
                        Height="40"
                        Padding="10,0"
                        Background="{Binding Positions[0].State.ElecValue, Converter={StaticResource ElecValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel Orientation="Horizontal">
                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ElecIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding Positions[0].State.ElecValue, Converter={StaticResource DoubleValueToElecText}}" />
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Top="350"
                        Canvas.Right="452"
                        Height="30"
                        Padding="5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox Width="18" Height="18">
                                <Path
                                    VerticalAlignment="Center"
                                    Data="{StaticResource ResistanceIcon}"
                                    Fill="White" />
                            </Viewbox>
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="White">
                                <Run Text="{Binding Positions[0].State.LoopR[0], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Top="350"
                        Canvas.Right="35"
                        Height="30"
                        Padding="5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[0].State.LoopR[1], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox Width="18" Height="18">
                                <Path
                                    VerticalAlignment="Center"
                                    Data="{StaticResource ResistanceIcon}"
                                    Fill="White" />
                            </Viewbox>
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="White">
                                <Run Text="{Binding Positions[0].State.LoopR[1], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </Canvas>
                <Canvas
                    Grid.RowSpan="5"
                    Grid.Column="2"
                    ClipToBounds="False">
                    <Canvas.Resources>
                        <DataTemplate x:Key="LeftGroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 19 60 19 380"
                                    Stroke="{Binding}"
                                    StrokeThickness="3" />
                                <Path
                                    Data="M 4 380 34 380 M 8 384 30 384 M 12 388 26 388"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate x:Key="RightGroundingDataTemplate">
                            <Grid>
                                <Path
                                    Data="M 435 60 435 380"
                                    Stroke="{Binding}"
                                    StrokeThickness="3" />
                                <Path
                                    Data="M 420 380 450 380 M 424 384 446 384 M 428 388 442 388"
                                    Stroke="{Binding}"
                                    StrokeThickness="2" />
                            </Grid>
                        </DataTemplate>
                    </Canvas.Resources>

                    <!--  来电端  -->
                    <Path
                        Data="M540 50 540 60 580 60"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3" />

                    <!--  隔离开关 合闸  -->
                    <Path
                        Data="M498.5 50 541.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[1].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='1'}" />

                    <!--  隔离开关 分闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M498.5 50 541.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[1].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='4'}" />

                    <!--  隔离开关 分闸  -->
                    <Path
                        Data="M500 40 541.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[1].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='2'}" />

                    <!--  隔离开关 合闸中  -->
                    <Path
                        helper:AnimationHelper.Flash="True"
                        Data="M500 40 541.5 50"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[1].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3'}" />

                    <!--  隔离开关 异常  -->
                    <Path
                        Data="M500 40 541.5 50"
                        Stroke="Gray"
                        StrokeThickness="3"
                        Visibility="{Binding Positions[1].State.Isolation, Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}" />

                    <!--  接触网 有电  -->
                    <Path
                        Data="M500 50 500 60 -36 60"
                        Stroke="{StaticResource HasEleclBrush}"
                        StrokeThickness="3"
                        Visibility="{Binding ElementName=OcsNoElec2, Path=Visibility, Converter={StaticResource ReverseVisibility}}" />

                    <!--  接触网 无电  -->
                    <Path
                        x:Name="OcsNoElec2"
                        Data="M500 50 500 60 -36 60"
                        Stroke="{StaticResource NoEleclBrush}"
                        StrokeThickness="3">
                        <Path.Visibility>
                            <MultiBinding Converter="{StaticResource IsolationAndElecResultToOcsVisibility}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Positions[1].State.Isolation" />
                                    <Binding Path="Positions[1].State.ElecResult" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Path.Visibility>
                    </Path>

                    <!--  左接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource LeftGroundingDataTemplate}"
                        Visibility="{Binding Positions[1].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  左接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource LeftGroundingDataTemplate}" Visibility="{Binding Positions[1].State.Grounding[0], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  右接地装置 动作状态  -->
                    <ContentControl
                        helper:AnimationHelper.Flash="True"
                        ContentTemplate="{StaticResource RightGroundingDataTemplate}"
                        Visibility="{Binding Positions[1].State.Grounding[1], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='3|4'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  右接地装置 异常状态  -->
                    <ContentControl ContentTemplate="{StaticResource RightGroundingDataTemplate}" Visibility="{Binding Positions[1].State.Grounding[1], Converter={StaticResource ContainsIntValueToVisibility}, ConverterParameter='0|10'}">
                        <SolidColorBrush Color="Gray" />
                    </ContentControl>

                    <!--  左接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[1].State.Grounding, Converter={StaticResource GroundingToVisibility}}">
                        <!--  左接地装置 正常  -->
                        <ContentControl
                            x:Name="LeftGroundingNoElec2"
                            ContentTemplate="{StaticResource LeftGroundingDataTemplate}"
                            Visibility="{Binding Positions[1].State.LoopR, Converter={StaticResource LoopRToVisibility}}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  左接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource LeftGroundingDataTemplate}" Visibility="{Binding ElementName=LeftGroundingNoElec2, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>

                    <!--  右接地装置 挂接状态  -->
                    <Grid Visibility="{Binding Positions[1].State.Grounding, Converter={StaticResource GroundingToVisibility}, ConverterParameter='1'}">
                        <!--  右接地装置 正常  -->
                        <ContentControl
                            x:Name="RightGroundingNoElec2"
                            ContentTemplate="{StaticResource RightGroundingDataTemplate}"
                            Visibility="{Binding Positions[1].State.LoopR, Converter={StaticResource LoopRToVisibility}, ConverterParameter='1'}">
                            <SolidColorBrush Color="{StaticResource NoEleclColor}" />
                        </ContentControl>

                        <!--  右接地装置 回路电阻大于阈值  -->
                        <ContentControl ContentTemplate="{StaticResource RightGroundingDataTemplate}" Visibility="{Binding ElementName=RightGroundingNoElec2, Path=Visibility, Converter={StaticResource ReverseVisibility}}">
                            <SolidColorBrush Color="{StaticResource WarningColor}" />
                        </ContentControl>
                    </Grid>
                    <Border
                        Canvas.Top="10"
                        Canvas.Right="240"
                        Height="40"
                        Padding="10,0"
                        Background="{Binding Positions[1].State.ElecValue, Converter={StaticResource ElecValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel Orientation="Horizontal">
                            <Path
                                VerticalAlignment="Center"
                                Data="{StaticResource ElecIcon}"
                                Fill="White" />
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding Positions[1].State.ElecValue, Converter={StaticResource DoubleValueToElecText}}" />
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Left="36"
                        Canvas.Top="350"
                        Height="30"
                        Padding="5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[1].State.LoopR[0], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox Width="18" Height="18">
                                <Path
                                    VerticalAlignment="Center"
                                    Data="{StaticResource ResistanceIcon}"
                                    Fill="White" />
                            </Viewbox>
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="White">
                                <Run Text="{Binding Positions[1].State.LoopR[0], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <Border
                        Canvas.Left="452"
                        Canvas.Top="350"
                        Height="30"
                        Padding="5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{Binding Positions[1].State.LoopR[1], Converter={StaticResource LoopRValueToBrush}}"
                        CornerRadius="3">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox Width="18" Height="18">
                                <Path
                                    VerticalAlignment="Center"
                                    Data="{StaticResource ResistanceIcon}"
                                    Fill="White" />
                            </Viewbox>
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="White">
                                <Run Text="{Binding Positions[1].State.LoopR[1], Converter={StaticResource LoopRValueToText}}" />
                                <Run Text="Ω" />
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </Canvas>

                <!--  菱形绝缘框  -->
                <Border Grid.Column="1">
                    <Path
                        Margin="0,0,0,50"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0 10 10 0 20 10 10 20z"
                        Stroke="#7A8799"
                        StrokeThickness="2" />
                </Border>
            </Grid>
        </DataTemplate>
        <!--#endregion-->

        <!--#region selector-->
        <selector:PositionDataTemplateSelector
            x:Key="PositionSelector"
            TPPTTPositionDataTemplate="{StaticResource TPPTTPositionDetailsDataTemplate}"
            TPTPositionDataTemplate="{StaticResource TPTPositionDetailsDataTemplate}"
            TPTTPositionDataTemplate="{StaticResource TPTTPositionDetailsDataTemplate}" />
        <!--#endregion-->

    </UserControl.Resources>

    <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource PositionSelector}" />
</UserControl>
